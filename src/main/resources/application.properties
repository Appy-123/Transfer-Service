spring.application.name=${APP_NAME:ODS-Transfer-Node}
server.port=8092
server.tomcat.threads.max=1
#Eureka config
eureka.client.enabled=true
eureka.client.serviceUrl.defaultZone=http://${EUREKA_USER:admin}:${EUREKA_PASS:admin}@${EUREKA_URI:localhost:8090}/eureka
eureka.client.healthcheck.enabled=true
eureka.client.registry-fetch-interval-seconds=5
eureka.instance.leaseRenewalIntervalInSeconds=10
eureka.instance.metadata-map.startup=${random.int}
#SBA
management.endpoints.web.exposure.include=*
#Ignore non-null values
spring.jackson.default-property-inclusion=NON_NULL
#Job Datasource config
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL95Dialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.hibernate.ddl-auto=update
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:${COCKROACH_URI:postgresql://localhost:26257/job_details?sslmode=disable}
spring.datasource.username=${COCKROACH_USER:root}
spring.datasource.password=${COCKROACH_PASS:root}
#spring.batch.initialize-schema=always
spring.batch.job.enabled=false
#RabitMQ
ods.rabbitmq.queue=${APP_NAME:transferQueue}
${ods.rabbitmq.exchange}=ods.exchange
#spring.rabbitmq.host=${RABBITMQ:localhost}
spring.rabbitmq.addresses=${RMQ_ADDRESS}
spring.rabbitmq.port=${AMPQ_PORT:5672}
spring.rabbitmq.username=${AMPQ_USER:guest}
spring.rabbitmq.password=${AMPQ_PWD:guest}
spring.rabbitmq.listener.direct.prefetch=1
#logging.level.com.zaxxer.hikari.HikariConfig=DEBUG
#logging.level.com.zaxxer.hikari=TRACE
influxdb.token=${INFLUX_TOKEN}
influxdb.org=${INFLUX_ORG}
influxdb.bucket=${INFLUX_BUCKET:transfer_data}
influxdb.url=${INFLUX_URI:https://influxdb.onedatashare.org}
#every minute
#every 2 minutes
job.metrics.save=true
#optimizer
optimizer.url=${OPTIMIZER_URL:http://localhost:8088}
#3 minuite cron
optimizer.interval=${OPTIMIZER_INTERVAL:120000}
optimizer.enable=${OPTIMIZER_ENABLE:false}

pmeter.home=${PMETER_HOME:${HOME}/OneDataShareProject/pmeter/src/pmeter/pmeter_cli.py}
pmeter.report.path=${PMETER_REPORT_PATH :${HOME}/.pmeter/transfer_service_pmeter_measure.txt}
pmeter.cron.run=${ENABLE_PMETER:true}
ods.user=${USER_NAME}
pmeter.interface=${PMETER_NIC_INTERFACE:awdl0}
pmeter.measure=1
pmeter.options=-KNS

# Micrometer influxdb configure
#management.metrics.export.influx.uri=${INFLUX_URI}
#management.metrics.export.influx.db=${INFLUX_BUCKET}
#management.metrics.export.influx.token=${INFLUX_TOKEN}
#management.metrics.export.influx.org=${INFLUX_ORG}
#management.metrics.export.influx.enabled=true
#management.metrics.export.influx.step=15s
#management.endpoints.web.exposure.exclude=*
#pmeter.cron.expression=0 0/1 * * * *
pmeter.cron.expression=*/15 * * * * *
